process DTVDriftCalibrationFromSimHits = {

	source = PoolSource{
			    untracked vstring fileNames = {
	    'rfio:/castor/cern.ch/user/j/jfernan2/AlCaReco_Zmumu_131/AlCaReco_Zmumu_131_1.root'
	}
	untracked uint32 debugVebosity = 1
	untracked bool   debugFlag     = true
    }

    untracked PSet maxEvents = {untracked int32 input = -1}

    # Digitization module
    include "SimMuon/Configuration/data/SimMuon.cff"
    #     replace muonDTDigis.Smearing = 0.
    
    module mix = MixingModule {
	int32 bunchspace = 25
    }
    

    # Magnetic Field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    # Geometry
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"


    # 1D RecHits
    include "RecoLocalMuon/DTRecHit/data/dt1DRecHits_LinearDrift.cfi"
    
    # 2D Segments
    include "RecoLocalMuon/DTSegment/data/dt2DSegments_CombPatternReco2D_LinearDrift.cfi"
    
    # 4D Segments
    include "RecoLocalMuon/DTSegment/data/dt4DSegments_CombPatternReco4D_LinearDrift.cfi"
    
    
    service = MessageLogger {
	untracked vstring destinations = {"warning.txt","error.txt","stndoutput.txt"}
	untracked PSet warning.txt     = { untracked string threshold = "WARNING" }
	untracked PSet error.txt       = { untracked string threshold = "ERROR"   }
	untracked PSet stndoutput.txt  = { untracked string threshold = "INFO"    }
	
	untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
	untracked vstring categories = { "FwkJob" }
	untracked PSet FrameworkJobReport.xml = {
	    untracked PSet default = { untracked int32 limit = 0 }
	    untracked PSet FwkJob = { untracked int32 limit = 10000000 }
	}
    }
    
    #Service to write vDrift in the DB
    service = PoolDBOutputService{
	string connect = "sqlite_file:vDrift.db"    	
	untracked string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	PSet DBParameters = {}
	VPSet toPut={{
	        string record = "DTMtimeRcd"
		string tag ="vDrift"
	    }}
    }

    #Module to calibrate vdrift 
    module dtvdriftcalibration = DTVDriftCalibration {
	# Switch on/off the verbosity
	untracked bool debug = false
	# Choose to calculate vDrift and t0 or just fill the TMax histograms
	untracked bool findVDriftAndT0 = true
	# Choose the chamber you want to calibrate (default = "All"), specify the chosen chamber
	# in the format "wheel station sector" (i.e. "-1 3 10")
	untracked string calibChamber = "All" 
	# Label to retrieve 4D segments from the event
	untracked string recHits4DLabel = 'dt4DSegments'
	# Name of the ROOT file which will contain the TMax histos
	untracked string rootFileName = "DTTMaxHistosFromSimHits_prova20K.root"
	# Name of the txt file which will contain the calibrated v_drift
	untracked string  vDriftFileName = "DTVDriftPostCalibration_prova20k.txt"
	# Chosen granularity (N.B. bySL is the only one implemented at the moment)  
	untracked string tMaxGranularity = "bySL" 
	#  Parameter set for  DTCalibrationMap constructor
	untracked PSet calibFileConfig = {	   
	    untracked int32 nFields = 6
	    untracked string calibConstFileName = "vDriftAndReso.txt"
	    untracked string calibConstGranularity = "bySL"
	}
	# The Maximum allowed chi2 for 4D Segment reconstruction 
	double maxChi2 = 1000.0 
	# The Maximum incident angle for Phi Seg 
	double maxAnglePhi = 1000
	# The Maximum incident angle for Theta Seg 
	double maxAngleZ = 1000
       # Switch for the check of noisy channels
        untracked bool checkNoisyChannels = false
  	# Module for t0 subtraction
	untracked string tTrigMode = 'DTTTrigSyncTOFCorr'
	untracked PSet tTrigModeConfig = {
	    untracked bool debug = false
	    # The offset to be subtracted to digi times (ns)
	    double tTrig = 500
	    # The velocity of signal propagation along the wire (cm/ns)
	    double vPropWire = 24.4
	    # The correction type for TOF
	    int32 tofCorrType = 2
	}
    
    }
    

    # Run from SimHit
    #path p = {mix, muonDTDigis, dt1DRecHits, dt2DSegments,dt4DSegments,dtvdriftcalibration}

    # Run from digi
    #path p = {dt1DRecHits, dt2DSegments,dt4DSegments,dtvdriftcalibration}

    # Run from RecHits
     path p = {dtvdriftcalibration}

}

