process MONITOR = {    

    include "CondCore/DBCommon/data/CondDBSetup.cfi"
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

    include "VisFramework/VisApplication/data/iguana-dt.cfi"
   source = DaqSource{ string reader = "DTDDUFileReader"
    PSet pset = {
	    #string fileName ="rfio:/castor/cern.ch/user/d/dtdqm/YB-1/Wm1_S5_testpulse_r1654.i0" 
	    #string fileName ="rfio:/castor/cern.ch/user/d/dtdqm/YB-1/Wm1S08_testpulse_20mV_r1620.i0" 
	    #string fileName ="rfio:/castor/cern.ch/user/d/dtdqm/YB-1/Wm1S06_TP_r1640.i0"
	    #string fileName ="/data/s/sbologne/Commissioning/Wm1_S5_testpulse_r1654.i0" 
	    string fileName ="/data/s/sbologne/Commissioning/Wm1S08_testpulse_20mV_r1620.i0" 
	    #string fileName ="/data/s/sbologne/Commissioning/Wm1S06_TP_r1640.i0"
	    #string fileName ="/data/s/sbologne/Commissioning/DT_W0S09_ALL_TP_r482.i0"
	    untracked bool isRaw = true
	    untracked int32 eventsAnalysisRate = 1
	    untracked int32 numberOfHeaderWords = 7
	}
    } 
   untracked PSet maxEvents = {untracked int32 input = 20000}
    
    #unpacker
    module dtunpacker = DTUnpackingModule{
       string dataType = "DDU"	
       untracked bool writeSC = true
       untracked bool debugMode = false
       untracked bool readingDDU = true
       untracked bool readDDUIDfromDDU = false	
       untracked bool isRaw = false
       untracked bool globalDAQ = false
       untracked int32 dduID = 730
       untracked bool performDataIntegrityMonitor = false
    }

   #mapping
    es_source roMapping = PoolDBESSource {
       using CondDBSetup
       #string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB-1/channelsMap/mapSec5.db"
       string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB-1/channelsMap/mapSec8.db"
       #string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB-1/channelsMap/mapSec6.db"
       #string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap/mapSec9.db"
       string timetype = "runnumber"
       untracked uint32 authenticationMethod = 0
       VPSet toGet = {{
            string record = "DTReadOutMappingRcd"
            string tag = "channelsMap"
       }}
    }

   #Service to write in the DB
    service = PoolDBOutputService{
	string connect = "sqlite_file:t0_sec8.db"    	
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	PSet DBParameters = {}
	VPSet toPut={{
		string record = "DTT0Rcd"
		string tag ="t0"
	    }}
    }

     #Module to calibrate ttrig
    module t0calib = DTT0Calibration{
	# Switch on/off the verbosity
	untracked bool debug = false
	# Label to retrieve DT digis from the event
	untracked string digiLabel = "dtunpacker"
	# Chose the wheel, sector (default = All)
	untracked string calibWheel = "All"
	untracked string calibSector = "All"
	# Name of the ROOT file which will contain the test pulse times per layer
	untracked string rootFileName = "DTTestPulses_sec8.root"
	# Cells for which you want the histos (default = None)
	untracked vstring cellsWithHisto = {"-1 8 1 1 3 48","-1 8 1 1 3 49",
	                                    "-1 8 1 1 2 49","-1 8 1 1 2 50",
                                            "-1 8 1 1 1 48","-1 8 1 1 1 49"}
	# Number of events to be used for the t0 per layer histos
	uint32 eventsForLayerT0 = 10000
    }	
    
    path p = {dtunpacker, t0calib}
}
