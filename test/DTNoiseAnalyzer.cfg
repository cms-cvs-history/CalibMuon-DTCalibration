process PROD = {

    include "CondCore/DBCommon/data/CondDBSetup.cfi"
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

    source = DaqSource{ 
        untracked string readerPluginName = "DTDDUFileReader"
        untracked PSet readerPset = {
             untracked string fileName ="/tmp/giorgia/DT_W0S03S04S05S09S10S11_HanyT_Tech_MB3lower_only_vmepcS1D12-18_r27963.i0"
             untracked bool isRaw = true
             untracked int32 numberOfHeaderWords = 10
        }
    }

    untracked PSet maxEvents = {untracked int32 input = 50000}

    #unpacker
    module dtunpacker = DTUnpackingModule{
       string dataType = "DDU"
       untracked bool fedbyType = true
       untracked bool useStandardFEDid = true
       PSet readOutParameters  = {
          untracked bool localDAQ = true
          untracked bool performDataIntegrityMonitor = false
          untracked bool debug = false
          PSet rosParameters = {
            untracked bool localDAQ = true
            untracked bool readingDDU = true
            untracked bool writeSC = true
            untracked bool readDDUIDfromDDU = true
            untracked bool performDataIntegrityMonitor = false
            untracked bool debug = false
            }
        }
    }

    include "FWCore/MessageService/data/MessageLogger.cfi"


    #mapping
    es_source roMapping = PoolDBESSource {
    using CondDBSetup
    string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/mapWh0.db"
    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_new/mapWh0.xml"
    string timetype = "runnumber"
    untracked uint32 authenticationMethod = 0
    VPSet toGet = {{
            string record = "DTReadOutMappingRcd"
            string tag = "channelsMap"
        }}
    }

   
    #tTrig
    es_source tTrigMapping = PoolDBESSource {
    using CondDBSetup
    string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/tTrig/tTrig_Wh0.db"
    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/tTrig/tTrig_Wh0.xml"
    string timetype = "runnumber"
    untracked uint32 authenticationMethod = 0
    VPSet toGet = {{
            string record = "DTTtrigRcd"
            string tag = "tTrig"
        }}
    }


    # Noise channels into DB
    service = PoolDBOutputService{
	using CondDBSetup
	string connect = "sqlite_file:database.db"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toPut={{
		# Noise
		string record = "DTStatusFlagRcd"
		string tag ="noise"
	   }}
    }


    #module to make the plots for noise studies
    module noiseCalib = DTNoiseCalibration {
       #Switch on/off the verbosity
       untracked bool debug = true
       #Total number of events
       untracked int32 TotEvents = 100000
       #Define the analysis type
       untracked bool fastAnalysis = true
       #Define the wheel of interest (to set if fastAnalysis=false)
       untracked int32 wheel = 0
       #Define the sector of interest (to set if fastAnalysis=false)
       untracked int32 sector = 11
       #Trigger mode
       untracked bool cosmicRun = true
       #Database option (to set if cosmicRun=true)
       untracked bool readDB = true
       #The trigger width(TDC counts) (to set if cosmicRun=true and readDB=false)
       untracked int32 defaultTtrig = 4000
       #The trigger width(ns) (to set if cosmicRun=false)
       untracked int32 TriggerWidth = 25350
       #Name of the ROOT file which will contains the 
       untracked string rootFileName = "DTNoiseCalib.root"
    }


    #module to compute noise from the plots done by DTNoiseCalibration
    module noiseComp = DTNoiseComputation {
       # Switch on/off the verbosity
       untracked bool debug = true
       #Define the analysis type
       untracked bool fastAnalysis = false
       #Total number of events	
       untracked int32 MaxEvents = 100000
       #Name of the ROOT file which contains the time boxes
       untracked string rootFileName = "DTNoiseCalib.root"
       #Name of the ROOT file which will contains the
       untracked string newRootFileName = "DTNoiseComp.root"
    }

    path p = {dtunpacker,noiseCalib}

}
