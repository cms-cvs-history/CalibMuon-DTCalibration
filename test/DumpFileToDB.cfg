process DumpFileToDB = {
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    #replace CondDBCommon.connect = "sqlite_file:tzero.db"
    #replace CondDBCommon.catalog = "file:tzero.xml"
    #replace CondDBCommon.connect = "sqlite_file:ttrig.db"
    #replace CondDBCommon.catalog = "file:ttrig.xml"
    #replace CondDBCommon.connect = "sqlite_file:noise.db"
    #replace CondDBCommon.catalog = "file:noise.xml"
    replace CondDBCommon.connect = "sqlite_file:map.db"
    replace CondDBCommon.catalog = "file:map.xml"
    
    source = EmptySource {untracked int32 maxEvents = 1}
    
    service = PoolDBOutputService{
	using CondDBCommon
	VPSet toPut={{
		#string record = "DTT0Rcd"
		#string tag ="tzero"
		#string record = "DTTtrigRcd"
		#string tag ="ttrig"
		#string record = "DTStatusFlagRcd"
		#string tag ="noise"
	   	string record = "DTReadOutMappingRcd"
		string tag ="channelsMap"
	   }}
    }
    
    
    module dumpToDB = DumpFileToDB {
	untracked PSet calibFileConfig = {
	    #untracked string calibConstFileName = "tzero_orig.txt"
	    #untracked string calibConstGranularity = "byWire"
	    #untracked int32 nFields = 6
	    
	    #untracked string calibConstFileName = "ttrig_orig.txt"
	    #untracked string calibConstGranularity = "bySL"
	    #untracked int32 nFields = 4

	    #untracked string calibConstFileName = "noise_orig.txt"
	    #untracked string calibConstGranularity = "byWire"
	    #untracked int32 nFields = 7
	}
	#untracked string dbToDump = "TZeroDB"
	#untracked string dbToDump = "TTrigDB"
  	#untracked string dbToDump = "NoiseDB"
	untracked string dbToDump = "ChannelsDB"
	untracked string channelsMapFileName = "map_orig.txt"
    }	
    
    path p = {dumpToDB}

}
