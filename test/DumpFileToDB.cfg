process DumpFileToDB = {
    
    include "CondCore/DBCommon/data/CondDBSetup.cfi"
    
    source = EmptySource {}
    untracked PSet maxEvents = {untracked int32 input = 1}
    

    # VDrift, TTrig, TZero, Noise or channels Map into DB
    service = PoolDBOutputService{
	using CondDBSetup
	string connect = "sqlite_file:tpDead_2.db"
	untracked string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toPut={{
		# VDrift
	   	#string record = "DTMtimeRcd"
		#string tag ="vdrift"
		# TZero
		#string record = "DTT0Rcd"
		#string tag ="tzero"
		# TTrig
		#string record = "DTTtrigRcd"
		#string tag ="ttrig"
		# Noise
		#string record = "DTStatusFlagRcd"
		#string tag ="noise"
		# Dead
		string record = "DTDeadFlagRcd"
		string tag ="tpDead"
		# Channels map
		#string record = "DTReadOutMappingRcd"
		#string tag = "channelsMap"
	   }}
    }
    
    
    #Module to dump a file into a DB
    module dumpToDB = DumpFileToDB {
	untracked PSet calibFileConfig = {
	    untracked string calibConstFileName = "tpDead.txt"
	    # VDrift & TTrig
	    #untracked string calibConstGranularity = "bySL"
	    #untracked int32 nFields = 4
	    # TZero
	    #untracked string calibConstGranularity = "byWire"
	    #untracked int32 nFields = 6
	    # Noise
	    #untracked string calibConstGranularity = "byWire"
	    #untracked int32 nFields = 7
	    # Dead
	    untracked string calibConstGranularity = "byWire"
	    untracked int32 nFields = 7
	}

	#Choose what database you want to write
	#untracked string dbToDump = "VDriftDB"
	#untracked string dbToDump = "TZeroDB"
	#untracked string dbToDump = "TTrigDB"
  	#untracked string dbToDump = "NoiseDB"
 	untracked string dbToDump = "DeadDB"

	#only for channels mapping
	#untracked string dbToDump = "ChannelsDB"
	#untracked string channelsMapFileName = "output.map"
    }	
    
    path p = {dumpToDB}

}
