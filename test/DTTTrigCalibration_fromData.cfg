process TTRIGCALIBPROC = {
       
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi" 
    include "CondCore/DBCommon/data/CondDBSetup.cfi"

    source = DaqSource  {
	untracked string readerPluginName = "DTDDUFileReader"
	untracked PSet readerPset = {
	    untracked string fileName ="/tmp/sbologne/DT_Wm2S02_TechTrig_r1966.i0"
	    untracked bool isRaw = true
	    untracked int32 numberOfHeaderWords = 7
	}
    }

   untracked PSet maxEvents = {untracked int32 input = 10000}
     
    #unpacker
    module dtunpacker = DTUnpackingModule {
    string dataType = "DDU"
    untracked bool fedbyType = true
    untracked bool useStandardFEDid = true
    PSet readOutParameters  = {
	untracked bool localDAQ = true
	untracked bool performDataIntegrityMonitor = false
	untracked bool debug = false
	PSet rosParameters = {
	    untracked bool localDAQ = true
	    untracked bool readingDDU = true  
	    untracked bool writeSC = true
	    untracked bool readDDUIDfromDDU = true
	    untracked bool performDataIntegrityMonitor = false
	    untracked bool debug = false
	}
    }
}

#FOR CMSSW before 170pre2
#   source = DaqSource{ 
# 	untracked string readerPluginName = "DTDDUFileReader"
# 	PSet readerPset = {
#             string fileName ="/tmp/sbologne/DT_Wm2S02_TechTrig_r1966.i0"
	    
#             untracked bool isRaw = true
#             untracked int32 skipEvents = 0
#             #untracked int32 numberOfHeaderWords = 10
#             untracked int32 numberOfHeaderWords = 7
#         }
#     }
#   untracked PSet maxEvents = {untracked int32 input = 10000}
#     module dtunpacker = DTUnpackingModule{
#        string dataType = "DDU"
#        untracked bool writeSC = true
#        untracked bool debugMode = false
#        untracked bool readingDDU = true
#        untracked bool readDDUIDfromDDU = false
#        # Masetti mail 1.08.07
#        #untracked bool isRaw = false
#        untracked bool isRaw = true
#        untracked bool globalDAQ = false
#        untracked int32 dduID = 770
#         #untracked int32 dduID = 730
#        untracked bool performDataIntegrityMonitor = false
#     }
    
    #Mapping    
    es_source mapping = PoolDBESSource { 
	using CondDBSetup
	string connect = "sqlite_file:map.db"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {
	    {string record = "DTReadOutMappingRcd"
		string tag = "channelsMap"}
	}
    }
    
    # The tzero from DB
    es_source TZero = PoolDBESSource {
	using CondDBSetup
	string connect =  "sqlite_file:tzero.db"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {{
		string record = "DTT0Rcd"
		string tag = "tzero"
	    }}
    }

    #Map of noisy channel
    es_source Noise = PoolDBESSource {
	using CondDBSetup
	string connect =  "sqlite_file:noise.db"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {{
		string record = "DTStatusFlagRcd" 
		string tag = "noise"
	    }}
    }
    
    #Service to write DB if ttrigcalib.findTMeanAndSigma is true
    service = PoolDBOutputService{
	string connect = "sqlite_file:ttrig.db"    	
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	PSet DBParameters = {}
	VPSet toPut={{
		string record = "DTTtrigRcd"
		string tag ="ttrig"
	    }}
    } 
    
    
    #Module to calibrate ttrig
    module ttrigcalib = DTTTrigCalibration {
	# Switch on/off the verbosity
	untracked bool debug = false
	
	# Label to retrieve DT digis from the event
	untracked string digiLabel = "dtunpacker"
	# Name of the ROOT file which will contain the time boxes
	untracked string rootFileName = "DTTimeBoxes.root"
	# Switch on/off the subtraction of t0 from pulses
	untracked bool doSubtractT0 = true
	# Switch on/off the DB writing
	untracked bool fitAndWrite = false
	# Switch on/off the check of noisy channels
	untracked bool checkNoisyChannels = true
	# Max number of digi per layer to reject a chamber
	untracked int32 maxDigiPerLayer = 10

	# Module for t0 subtraction
	untracked string tTrigMode = 'DTTTrigSyncT0Only'
	# Parameter set for t0 subtraction module
	untracked PSet tTrigModeConfig = {
	    untracked bool debug = false
	}
    }	
    
    path p = {dtunpacker, ttrigcalib}

}

