process TTRIGCALIBPROC = {
    
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
        replace CondDBCommon.connect = "sqlite_file:test.db"
        replace CondDBCommon.timetype = "runnumber" 
        replace CondDBCommon.catalog = "file:mycatalog.xml" 
        replace CondDBCommon.DBParameters.messageLevel = 3
    
    #Mapping
    es_source mapping = PoolDBESSource { 
	using CondDBCommon
	VPSet toGet = {
	    {string record = "DTReadOutMappingRcd"
		string tag = "MTCCMap"}
	}
    }
    replace mapping.CondDBCommon.connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/MTCCMap.db"
    replace mapping.CondDBCommon.catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/MTCCCatalog.xml"

    source = DaqSource{ string reader = "DTDDUFileReader"
	untracked int32 maxEvents = 10
	PSet pset = { string fileName ="/data/MTCC/data/mtcc.00000669.DT.LocalDaq_B_off.0.raw"
	    untracked bool isRaw = true }
    }
    
    module dtunpacker = DTUnpackingModule{
	string dataType = "DDU"
	untracked bool debugMode = false
	untracked bool readingDDU = true
	untracked bool isRaw = true
	untracked bool globalDAQ = false
	untracked int32 dduID = 770
	untracked bool performDataIntegrityMonitor = false 
    }
    
    
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    
    
    # The tzero from DB
    es_source TZero = PoolDBESSource {
	using CondDBCommon
	VPSet toGet = {{
		string record = "DTT0Rcd"
		string tag = "t0MTCC"
	    }}
    }
    replace TZero.CondDBCommon.connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/t0MTCC.db"
    replace TZero.CondDBCommon.catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/MTCCCatalog.xml"


    #Map of noisy channel
    es_source Noise = PoolDBESSource {
	using CondDBCommon
	VPSet toGet = {{
		string record = "DTStatusFlagRcd" 
		string tag = "Noisy_ddu3Sect"
	    }}
    }
    replace Noise.CondDBCommon.connect =  "sqlite_file:/data/MTCC/database/run669/Noisy_ddu3Sect.db"
    replace Noise.CondDBCommon.catalog = "file:/data/MTCC/database/run669/Noisy_ddu3Sect.xml"
    
    service = PoolDBOutputService{
	using CondDBCommon
	replace CondDBCommon.connect = "sqlite_file:ttrig.db"    
	replace CondDBCommon.catalog = "file:ttrig.xml"
	VPSet toPut={{
		untracked string containerName = "DTDBObject"
		string tag ="ttrig"
	    }}
    }
    
    
    module ttrigcalib = DTTTrigCalibration {
	# Switch on/off the verbosity
	untracked bool debug = true
	
	# Label to retrieve DT digis from the event
	untracked string digiLabel = "dtunpacker"
	# Name of the ROOT file which will contain the time boxes
	untracked string rootFileName = "DTTimeBoxes.root"
	# Switch on/off the subtraction of t0 from pulses
	untracked bool doSubtractT0 = true
	# Switch on/off the DB writing
	untracked bool findTMeanAndSigma = true
	# Switch for the check of noisy channels
	untracked bool checkNoisyChannels = true
	
	# Module for t0 subtraction
	untracked string tTrigMode = 'DTTTrigSyncT0Only'
	# Parameter set for t0 subtraction module
	untracked PSet tTrigModeConfig = {
	    untracked bool debug = true
	}
    }	
    
    path p = {dtunpacker, ttrigcalib}

}

