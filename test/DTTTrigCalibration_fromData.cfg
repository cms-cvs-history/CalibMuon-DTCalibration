process TTRIGCALIBPROC = {
    
    include "CondCore/DBCommon/data/CondDBSetup.cfi"
#    include "RecoLocalMuon/DTSegment/test/logger.cfi"
    
    #Mapping    
    es_source mapping = PoolDBESSource { 
	using CondDBSetup
        string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_DDU770/mapSec7.db"
    untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/channelsMap_DDU770/mapSec7.xml"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {
	    {string record = "DTReadOutMappingRcd"
		string tag = "channelsMap_SecTestYB0_Sec7"}
	}
    }

    #Event data source   : flat binary file
       source = DaqSource{ 
        string reader = "DTDDUFileReader"
     	untracked int32 maxEvents = 1000
     	PSet pset = { 
       #  string fileName ="rfio:/castor/cern.ch/user/d/dtdqm/YB0/DT_W0S02_ALL_HanyT_Tech_r322.i0"
	    string fileName ="rfio:/castor/cern.ch/user/d/dtdqm/YB0/DT_W0S07_All_HanyT_Tech_r349.i0"
     	    untracked bool isRaw = true }
         }
    
    #     module dtunpacker = DTUnpackingModule{
    # 	string dataType = "DDU"
    # 	untracked bool debugMode = false
    # 	untracked bool readingDDU = true
    # 	untracked bool isRaw = true
    # 	untracked bool globalDAQ = false
    # 	untracked int32 dduID = 770
    # 	untracked bool performDataIntegrityMonitor = false 
    #     }

    #Event data source : root file
 #   source = PoolSource {
#	untracked vstring fileNames = {
#    'rfio:/castor/cern.ch/cms/MTCC/data/00004333/A/mtcc.00004333.A.testStorageManager_0.0.root'
#	}  
#        untracked uint32 debugVebosity = 10
#	untracked bool debugFlag = true
#	untracked int32 maxEvents = 5000
#    }
    
    module dtunpacker = DTUnpackingModule{
    string dataType = "DDU"
    untracked bool debugMode = false
    untracked bool readingDDU = true
   untracked bool isRaw = false
    untracked bool globalDAQ = false
    untracked int32 dduID = 770
#    untracked int32 dduID = 730
    untracked bool performDataIntegrityMonitor = false
    }

    
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    
    
    # The tzero from DB
    es_source TZero = PoolDBESSource {
	using CondDBSetup
	string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/t0/t0.db"
	untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB0/catalog.xml"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {{
		string record = "DTT0Rcd"
                string tag = "tzero_13_03_07"
	    }}
    }

    #Map of noisy channel
 #    es_source Noise = PoolDBESSource {
# 	using CondDBSetup
#  	string connect =  "sqlite_file:noise_Sec12_YB0.db"
# 	string connect =  "sqlite_file:noise_Sec2_YB0.db"
# 	string connect =  "sqlite_file:noise_Sec7_YB0.db"
# 	string connect =  "sqlite_file:noise_Sec9_YB0.db"
# 	untracked string catalog = "file:catalog.xml"
# 	string timetype = "runnumber"    
# 	untracked uint32 authenticationMethod = 0
# 	VPSet toGet = {{
# 		string record = "DTStatusFlagRcd" 
# 		string tag = "noise"
# 	    }}
#     }
    
    #Service to write DB if ttrigcalib.findTMeanAndSigma is true
    service = PoolDBOutputService{
	string connect = "sqlite_file:ttrig.db"    	
	untracked string catalog = "file:ttrig.xml"	
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	PSet DBParameters = {}
	VPSet toPut={{
		string record = "DTTtrigRcd"
		string tag ="tTrig"
	    }}
    } 
    
    
    #Module to calibrate ttrig
    module ttrigcalib = DTTTrigCalibration {
	# Switch on/off the verbosity
 	untracked bool debug = false
#	untracked bool debug = true
		
	# Label to retrieve DT digis from the event
	untracked string digiLabel = "dtunpacker"
	# Name of the ROOT file which will contain the time boxes
	untracked string rootFileName = "DTTimeBoxes.root"
	# Switch on/off the subtraction of t0 from pulses
	untracked bool doSubtractT0 = true
	# Switch on/off the DB writing
        untracked bool findTMeanAndSigma = true
       # untracked bool findTMeanAndSigma = true
	# Switch for the check of noisy channels
	untracked bool checkNoisyChannels = false
	#Max number of digi per layer to reject a chamber
	untracked int32 maxDigiPerLayer = 2
	
	# Module for t0 subtraction
	untracked string tTrigMode = 'DTTTrigSyncT0Only'
	# Parameter set for t0 subtraction module
	untracked PSet tTrigModeConfig = {
	    untracked bool debug = false
	}
    }	
    
    path p = {dtunpacker, ttrigcalib}

}

