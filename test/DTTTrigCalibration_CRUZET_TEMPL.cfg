process TTRIGCALIBPROC = {
       
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi" 
    include "CondCore/DBCommon/data/CondDBSetup.cfi"
    #Event data source
    source = PoolSource {
	untracked vstring fileNames = {	}
	untracked bool useCSA08Kludge = true
	untracked uint32 debugVebosity = 10
	untracked bool   debugFlag     = true
    }
    untracked PSet maxEvents = {untracked int32 input = -1} 
    #unpacker
    module dtunpacker = DTUnpackingModule {
	string dataType = "DDU"
	untracked bool fedbyType = true
	untracked bool useStandardFEDid = true
	PSet readOutParameters  = {
	    untracked bool localDAQ = false
	    untracked bool performDataIntegrityMonitor = false
	    untracked bool debug = false
	    PSet rosParameters = {
		untracked bool localDAQ = false
		untracked bool readingDDU = true  
		untracked bool writeSC = true
		untracked bool readDDUIDfromDDU = true
		untracked bool performDataIntegrityMonitor = false
		untracked bool debug = false
	}
	}
    }
    
    es_source DTMapping = PoolDBESSource {
	string timetype = "runnumber"    
	#	string connect = "oracle://orcon/CMS_COND_ON_18X_DT"
	string connect = "oracle://cms_orcoff_prod/CMS_COND_20X_DT"
	#        string connect = "frontier://FrontierOn/CMS_COND_ON_18X_DT"
	
	untracked bool siteLocalConfig = false
	PSet DBParameters = {
	    untracked int32 messageLevel = 0
	    untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
	}
	
	VPSet toGet = {
	    { string record = "DTReadOutMappingRcd"
		string tag = "map_CRUZET" },
	    { string record = "DTT0Rcd"
		string tag = "TZEROTEMPLATE" }, 
            { string record = "DTStatusFlagRcd"
		string tag = "NOISETEMPLATE"}
	}
    }


    #Service to write DB if ttrigcalib.findTMeanAndSigma is true
    service = PoolDBOutputService{
	string connect = "sqlite_file:ttrig.db"    	
	untracked uint32 authenticationMethod = 0
	PSet DBParameters = { untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"}
	VPSet toPut={{
		string record = "DTTtrigRcd"
		string tag ="ttrig"
	    }}
    } 
    
    
    #Module to calibrate ttrig
    module ttrigcalib = DTTTrigCalibration {
	# Switch on/off the verbosity
	untracked bool debug = false 
        # Tbox rising edge fit parameter
	untracked double sigmaTTrigFit = 5
	# Label to retrieve DT digis from the event
	untracked string digiLabel = "dtunpacker"
	# Name of the ROOT file which will contain the time boxes
	untracked string rootFileName = "DTTimeBoxes.root"
	# Switch on/off the subtraction of t0 from pulses
	untracked bool doSubtractT0 = true
	# Switch on/off the DB writing
	untracked bool fitAndWrite = true
	# Switch on/off the check of noisy channels
	untracked bool checkNoisyChannels = true
	# Max number of digi per layer to reject a chamber
	untracked int32 maxDigiPerLayer = 10

	# Module for t0 subtraction
	untracked string tTrigMode = 'DTTTrigSyncT0Only'
	# Parameter set for t0 subtraction module
	untracked PSet tTrigModeConfig = {
	    untracked bool debug = false
	}
    }	
    
    path p = {dtunpacker, ttrigcalib}

}

