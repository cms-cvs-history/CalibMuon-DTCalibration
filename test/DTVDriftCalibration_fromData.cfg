process DTVDriftCalibrationfromData = {
    
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
     
    include "CondCore/DBCommon/data/CondDBSetup.cfi"
    source = DaqSource  {
	untracked string readerPluginName = "DTDDUFileReader"
	untracked PSet readerPset = {
	    untracked string fileName ="/tmp/giorgia/DT_W0S2S3S6S7_TechTrig_vmepcs2g18-16_r34405.i0"
	    untracked bool isRaw = true
	    untracked int32 numberOfHeaderWords = 10
	}
    }

   untracked PSet maxEvents = {untracked int32 input = 10000}
     
    #unpacker
module dtunpacker = DTUnpackingModule {
    string dataType = "DDU"
    untracked bool fedbyType = true
    untracked bool useStandardFEDid = true
    PSet readOutParameters  = {
	untracked bool localDAQ = true
	untracked bool performDataIntegrityMonitor = false
	untracked bool debug = false
	PSet rosParameters = {
	    untracked bool localDAQ = true
	    untracked bool readingDDU = true  
	    untracked bool writeSC = true
	    untracked bool readDDUIDfromDDU = true
	    untracked bool performDataIntegrityMonitor = false
	    untracked bool debug = false
	}
    }
}

#FOR CMSSW before 170pre2
#   source = DaqSource{ 
# 	untracked string readerPluginName = "DTDDUFileReader"
# 	PSet readerPset = {
#             string fileName ="/tmp/sbologne/DT_Wm2S02_TechTrig_r1966.i0"
	    
#             untracked bool isRaw = true
#             untracked int32 skipEvents = 0
#             #untracked int32 numberOfHeaderWords = 10
#             untracked int32 numberOfHeaderWords = 7
#         }
#     }
#   untracked PSet maxEvents = {untracked int32 input = 10000}
#     module dtunpacker = DTUnpackingModule{
#        string dataType = "DDU"
#        untracked bool writeSC = true
#        untracked bool debugMode = false
#        untracked bool readingDDU = true
#        untracked bool readDDUIDfromDDU = false
#        # Masetti mail 1.08.07
#        #untracked bool isRaw = false
#        untracked bool isRaw = true
#        untracked bool globalDAQ = false
#        untracked int32 dduID = 770
#         #untracked int32 dduID = 730
#        untracked bool performDataIntegrityMonitor = false
#     }
   
    #Mapping
    es_source mapping = PoolDBESSource { 
	using CondDBSetup
	string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB-2/channelsMap_new/mapSec2.db"
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {
	    {string record = "DTReadOutMappingRcd"
		string tag = "channelsMap"}
	}
    }


    # The tzero from DB
    es_source TZero = PoolDBESSource {
	using CondDBSetup
	string connect =  "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB-2/t0/t0.db"
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {{
		string record = "DTT0Rcd"
		string tag = "tzero_13_03_07"
	    }}
    }
    
    
    #The noisy channels from DB
   #  es_source Noise = PoolDBESSource {
# 	using CondDBSetup
# 	string connect =  "sqlite_file:noise.db"
# 	untracked string catalog = "file:noise.xml"    
# 	untracked uint32 authenticationMethod = 0
# 	VPSet toGet = {{
# 		string record = "DTStatusFlagRcd" 
# 		string tag = "noise"
# 	    }}
#     }
    
    # The ttrig from DB
    es_source TTrig = PoolDBESSource { 
	using CondDBSetup
	string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/TestYB-2/tTrig/tTrig_Sec2.db"
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {{
		string record = "DTTtrigRcd" 
		string tag = "tTrig"}}
    }
    
    #Service to write vDrift in the DB
    service = PoolDBOutputService{
	string connect = "sqlite_file:vDrift.db"
	untracked string timetype = "runnumber"        	
	untracked uint32 authenticationMethod = 0
	PSet DBParameters = {}
	VPSet toPut={{
	        string record = "DTMtimeRcd"
		string tag ="vDrift"
	    }}
    }
    
    # DT 1D RecHits
    include "RecoLocalMuon/DTRecHit/data/dt1DRecHits_LinearDrift_CosmicData.cfi"	
    
    # DT 2D Segments
    include "RecoLocalMuon/DTSegment/data/dt2DSegments_CombPatternReco2D_LinearDrift_CosmicData.cfi"
    
    # DT 4D Segments
    include "RecoLocalMuon/DTSegment/data/dt4DSegments_CombPatternReco4D_LinearDrift_CosmicData.cfi"
    
    #	service = MessageLogger {
    #			   untracked vstring destinations = {"warning.txt","error.txt","stndoutput.txt"}
    #			   untracked PSet warning.txt     = { untracked string threshold = "WARNING" }
    #			   untracked PSet error.txt       = { untracked string threshold = "ERROR"   }
    #			   untracked PSet stndoutput.txt  = { untracked string threshold = "INFO"    }
    #	
    #			   untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
    #			   untracked vstring categories = { "FwkJob" }
    #			   untracked PSet FrameworkJobReport.xml = {
    #	        		                     untracked PSet default = { untracked int32 limit = 0 }
    #	                        		     untracked PSet FwkJob = { untracked int32 limit = 10000000 }
    #	                        		}
    #				}
    
    
    module dtvdriftcalibration = DTVDriftCalibration {
	# Switch on/off the verbosity
	untracked bool debug = true
	# Choose to calculate vDrift and t0 or just fill the TMax histograms
	untracked bool findVDriftAndT0 = true
	# Choose the chamber you want to calibrate (default = "All"), specify the chosen chamber
	# in the format "wheel station sector" (i.e. "-1 3 10")
	untracked string calibChamber = "All" 
	# Label to retrieve 4D segments from the event
	untracked string recHits4DLabel = 'dt4DSegments'
	# Name of the ROOT file which will contain the TMax histos
	untracked string rootFileName = "DTTMaxHistosFromData.root"
	# Name of the txt file which will contain the calibrated v_drift
	untracked string  vDriftFileName = "vDrift_afterTTrigCalib_fromMtime.txt"
	# Chosen granularity (N.B. bySL is the only one implemented at the moment)  
	untracked string tMaxGranularity = "bySL" 
	#  Parameter set for  DTCalibrationMap constructor
	untracked PSet calibFileConfig = {
	    untracked int32 nFields = 6
	    untracked string calibConstFileName = "vDriftAndReso.txt"
	    untracked string calibConstGranularity = "bySL"
	}
	# The Maximum allowed chi2 for 4D Segment reconstruction 
	double maxChi2 = 1000.0 
	# The Maximum incident angle for Phi Seg (degrees)
	double maxAnglePhi = 50
	# The Maximum incident angle for Theta Seg (degrees)
	double maxAngleZ = 50
	# Switch for the check of noisy channels
	untracked bool checkNoisyChannels = false
	# The module to be used for ttrig synchronization and its set parameter
	untracked string tTrigMode = 'DTTTrigSyncFromDB'
	untracked PSet tTrigModeConfig = {
	    untracked bool debug = false
	    # The ttrig from the time box fit is defined as mean + kFactor * sigma
	    double kFactor = -1.0
	    # The velocity of signal propagation along the wire (cm/ns)
	    double vPropWire = 24.4
	    # Switch on/off the TO corrections
	    bool doT0Correction = true
	    # Switch on/off the TOF correction for particles
	    bool doTOFCorrection = false
	    int32 tofCorrType = 0
	    # Switch on/off the correction for the signal propagation along the wire
	    bool doWirePropCorrection  = true
	    int32 wirePropCorrType = 0
	}
    }
    
    path p = {dtunpacker, dt1DRecHits, dt2DSegments, dt4DSegments, dtvdriftcalibration}

}



