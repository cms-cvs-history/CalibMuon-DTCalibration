process DTVDriftCalibrationfromData = {

	#Mapping
        es_source mapping = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTReadOutMappingRcd"
                                       string tag = "MTCCMap"}
                                     }
                                     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/MTCCMap.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/MTCCCatalog.xml"
                                     string timetype = "runnumber"
                                     untracked uint32 authenticationMethod = 0
                                     untracked uint32 messagelevel = 0
                                   }
	#Daq Source
	source = DaqSource{ string reader = "DTDDUFileReader"
   		    	    untracked int32 maxEvents = 10
          		    PSet pset = { string fileName ="/data/MTCC/data/mtcc.00000669.DT.LocalDaq_B_off.0.raw"
		                           untracked bool isRaw = true }
	}

       	 module dtunpacker = DTUnpackingModule{
               string dataType = "DDU"
               untracked bool debugMode = false
               untracked bool readingDDU = true
               untracked bool isRaw = true
               untracked bool globalDAQ = false
               untracked int32 dduID = 770
               untracked bool performDataIntegrityMonitor = false 
       }

	
	
	include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
	include "Geometry/DTGeometry/data/dtGeometry.cfi"

	# The tzero from DB
	es_source TZero = PoolDBESSource {  VPSet toGet = {
                                     {string record = "DTT0Rcd"
                                     string tag = "t0MTCC"
                                     } }
                                     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/t0MTCC.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_090/MTCCCatalog.xml"
                                     string timetype = "runnumber"
                                     untracked uint32 authenticationMethod = 0
                                     untracked uint32 messagelevel = 0
                                    }

	#The noisy channels from DB
	es_source Noise = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTStatusFlagRcd" 
                                       string tag = "Noisy_ddu3Sect"}
                                     }
		    		     bool loadAll = true
				     string connect = "sqlite_file:/data/MTCC/database/run669/Noisy_ddu3Sect.db"
				     untracked string catalog = "file:/data/MTCC/database/run669/Noisy_ddu3Sect.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0
				     untracked uint32 messagelevel = 0
				   }

	# The ttrig from DB
	es_source TTrig = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTTtrigRcd" 
					string tag = "tTrig"}	
                                     }
		    		     bool loadAll = true
				     string connect = "sqlite_file:/data/simuSamples/database/tTrig.db"
				     untracked string catalog = "file:/data/simuSamples/database/tTrig.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0
				     untracked uint32 messagelevel = 0
				   }

	#Service to write vDrift in the DB
	service = PoolDBOutputService{
	  string connect = "sqlite_file:/data/MTCC/database/run669/vDrift.db"    	
          string timetype = "runnumber"    
	  untracked uint32 authenticationMethod = 0
	  untracked string catalog = "file:/data/MTCC/database/run669/vDrift.xml"
	  VPSet toPut={
			untracked string containerName = "DTDBObject"
          		string tag ="vDrift"
			}
	}

	# DT 1D RecHits
  	include "RecoLocalMuon/DTRecHit/data/dt1DRecHits_LinearDrift_CosmicData.cfi"	

  	# DT 2D Segments
  	include "RecoLocalMuon/DTSegment/data/dt2DSegments_CombPatternReco2D_LinearDrift_CosmicData.cfi"

  	# DT 4D Segments
  	include "RecoLocalMuon/DTSegment/data/dt4DSegments_CombPatternReco4D_LinearDrift_CosmicData.cfi"

#	service = MessageLogger {
#			   untracked vstring destinations = {"warning.txt","error.txt","stndoutput.txt"}
#			   untracked PSet warning.txt     = { untracked string threshold = "WARNING" }
#			   untracked PSet error.txt       = { untracked string threshold = "ERROR"   }
#			   untracked PSet stndoutput.txt  = { untracked string threshold = "INFO"    }
#	
#			   untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
#			   untracked vstring categories = { "FwkJob" }
#			   untracked PSet FrameworkJobReport.xml = {
#	        		                     untracked PSet default = { untracked int32 limit = 0 }
#	                        		     untracked PSet FwkJob = { untracked int32 limit = 10000000 }
#	                        		}
#				}


	module dtvdriftcalibration = DTVDriftCalibration {
		# Switch on/off the verbosity
		untracked bool debug = false
		# Choose to calculate vDrift and t0 or just fill the TMax histograms
		untracked bool findVDriftAndT0 = true
		# Choose the chamber you want to calibrate (default = "All"), specify the chosen chamber
		# in the format "wheel station sector" (i.e. "-1 3 10")
		untracked string calibChamber = "All" 
		# Label to retrieve 4D segments from the event
		untracked string recHits4DLabel = 'dt4DSegments'
		# Name of the ROOT file which will contain the TMax histos
		untracked string rootFileName = "DTTMaxHistosFromData.root"
		# Name of the txt file which will contain the calibrated v_drift
		untracked string  vDriftFileName = "vDrift_afterTTrigCalib_fromMtime.txt"
		# Chosen granularity (N.B. bySL is the only one implemented at the moment)  
		untracked string tMaxGranularity = "bySL" 
		#  Parameter set for  DTCalibrationMap constructor
		untracked PSet calibFileConfig = {
			untracked int32 nFields = 6
			untracked string calibConstFileName = "vDriftAndReso.txt"
			untracked string calibConstGranularity = "bySL"
		}
		# The Maximum allowed chi2 for 4D Segment reconstruction 
		double maxChi2 = 1000.0 
		# The Maximum incident angle for Phi Seg (degrees)
		double maxAnglePhi = 50
		# The Maximum incident angle for Theta Seg (degrees)
		double maxAngleZ = 50
		# Switch for the check of noisy channels
		untracked bool checkNoisyChannels = true
		# The module to be used for ttrig synchronization and its set parameter
		untracked string tTrigMode = 'DTTTrigSyncFromDB'
		untracked PSet tTrigModeConfig = {
			untracked bool debug = false
			# The ttrig from the time box fit is defined as mean + kFactor * sigma
			double kFactor = -1.0
			# The velocity of signal propagation along the wire (cm/ns)
			double vPropWire = 24.4
			# Switch on/off the TOF correction for particles
			bool doTOFCorrection = false
			# Switch on/off the correction for the signal propagation along the wire
			bool doWirePropCorrection  = true
		}
 	}
	
	path p = {dtunpacker, dt1DRecHits, dt2DSegments, dt4DSegments, dtvdriftcalibration}

}



