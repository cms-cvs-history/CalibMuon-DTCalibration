process DumpDBToFile = {
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    #replace CondDBCommon.connect = "sqlite_file:tzero.db"
    #replace CondDBCommon.catalog = "file:tzero.xml"
    #replace CondDBCommon.connect = "sqlite_file:ttrig.db"
    #replace CondDBCommon.catalog = "file:ttrig.xml"
    replace CondDBCommon.connect = "sqlite_file:noise.db"
    replace CondDBCommon.catalog = "file:noise.xml"
   
    source = EmptySource {untracked int32 maxEvents = 1}
    
    # TTrig from DB
    es_source ttrig = PoolDBESSource {  
	using CondDBCommon
	VPSet toGet = {{
		#string record = "DTT0Rcd" 
		#string tag = "tzero"
	   	#string record = "DTTtrigRcd"
		#string tag ="ttrig"
	   	string record = "DTStatusFlagRcd"
		string tag ="noise"
	   }}
    }
    

    module dumpToFile = DumpDBToFile {
	#untracked string outputFileName = "tzero.txt"
	#untracked string outputFileName = "ttrig.txt"
	untracked string outputFileName = "noise.txt"
	untracked PSet calibFileConfig = {
	    #untracked string calibConstGranularity = "byWire"
	    #untracked int32 nFields = 6
	    #untracked string calibConstGranularity = "bySL"
	    #untracked int32 nFields = 4
	    untracked string calibConstGranularity = "byWire"
	    untracked int32 nFields = 7
	}
    	#untracked string dbToDump = "TZeroDB"
   	#untracked string dbToDump = "TTrigDB"
   	untracked string dbToDump = "NoiseDB"
   }	
    
    path p = {dumpToFile}

}
