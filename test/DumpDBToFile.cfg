process DumpDBToFile = {
   
    include "CondCore/DBCommon/data/CondDBSetup.cfi"
 
    source = EmptySource {}
    untracked PSet maxEvents = {untracked int32 input = 1}
   
    # VDrift, TTrig, TZero, Noise or channels Map from DB
    es_source calibDB = PoolDBESSource {  
	using CondDBSetup
	string connect = "sqlite_file:tpDead.db"
	string timetype = "runnumber"    
	untracked uint32 authenticationMethod = 0
	VPSet toGet = {{
		# VDrift
	   	#string record = "DTMtimeRcd"
		#string tag ="vDrift"
		# TZero
		#string record = "DTT0Rcd" 
		#string tag = "t0"
		# TTrig
	   	#string record = "DTTtrigRcd"
		#string tag ="tTrig"
		# Noise
		#string record = "DTStatusFlagRcd"
		#string tag ="noise"
		# TP Dead
		string record = "DTDeadFlagRcd"
		string tag ="tpDead"	
		# Channels map
		#string record = "DTReadOutMappingRcd"
		#string tag = "channelsMap"
	    }}
    }
    
    #Module to dump DB to a file
    module dumpToFile = DumpDBToFile {
	untracked string outputFileName = "tpDead.txt"
	untracked PSet calibFileConfig = {
	    # VDrift & TTrig
	    #untracked string calibConstGranularity = "bySL"
	    #untracked int32 nFields = 4
	    # TZero
	    #untracked string calibConstGranularity = "byWire"
	    #untracked int32 nFields = 6
	    # Noise
	    # untracked string calibConstGranularity = "byWire"
	    # untracked int32 nFields = 7
	    # TP dead
	    untracked string calibConstGranularity = "byWire"
	    untracked int32 nFields = 7
	}

	#Choose what database you want to write
	#untracked string dbToDump = "VDriftDB"
   	#untracked string dbToDump = "TZeroDB"
	#untracked string dbToDump = "TTrigDB"
  	#untracked string dbToDump = "NoiseDB"
	untracked string dbToDump = "DeadDB"
   	#untracked string dbToDump = "ChannelsDB"
}	
    
    path p = {dumpToFile}

}
